pipeline {
    agent any

    environment {
        DOCKERHUB_CREDS = credentials('travissscottt-dockerhub')
    }

    options {
        timestamps()
        skipDefaultCheckout(true)
    }

    triggers {
        pollSCM('* * * * *')
    }

    stages {

        stage('Clone GitHub Repository') {
            steps {
                cleanWs()
                bat 'chcp 65001 && git clone -b master https://github.com/Dolmachi/CI-CD-pipeline-Lab-1.git'
            }
        }

        stage('Download Data with DVC') {
            steps {
                dir("CI-CD-pipeline-Lab-1") {
                    bat 'dvc pull'
                }
            }
        }

        stage('Checkout Repo Dir') {
            steps {
                bat 'chcp 65001 && cd CI-CD-pipeline-Lab-1 && dir'
            }
        }

        stage('Run Unit Tests') {
            steps {
                dir("CI-CD-pipeline-Lab-1") {
                    bat '''
                        chcp 65001
                        call "C:\\Users\\Ogurchikov\\anaconda3\\Scripts\\activate.bat" mlops
                        pytest --cov=src
                    '''
                }
            }
        }


        stage('Login to DockerHub') {
            steps {
                bat 'chcp 65001 && docker login -u %DOCKERHUB_CREDS_USR% -p %DOCKERHUB_CREDS_PSW%'
            }
        }

        stage('Build and Run Docker Container') {
            steps {
                script {
                    try {
                        bat 'chcp 65001 && cd CI-CD-pipeline-Lab-1 && docker compose build'
                    } finally {
                        bat '''
                            chcp 65001
                            cd CI-CD-pipeline-Lab-1

                            docker compose up -d
                        '''
                    }
                }
            }
        }

        stage('Check Container Logs') {
            steps {
                dir("CI-CD-pipeline-Lab-1") {
                    bat '''
                        for /f %%i in ('docker ps -qf "name=api_container"') do set container_id=%%i
                        if "%container_id%" == "" (
                            echo "No container running"
                            exit 1
                        )
                        docker logs --tail 1000 -f %container_id%
                    '''
                }
            }
        }

        stage('Push Docker Image to DockerHub') {
            steps {
                bat '''
                    for /f %%i in ('docker images -q travissscottt/api_car_price:latest') do set image_id=%%i
                    if "%image_id%" == "" (
                        echo "Error: Docker image not found. Build might have failed."
                        exit 1
                    )
                    docker push travissscottt/api_car_price:latest
                '''
            }
        }
    }

    post {
        always {
            bat 'chcp 65001 && docker logout'
            cleanWs()
        }
    }
}

